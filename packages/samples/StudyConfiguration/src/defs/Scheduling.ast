language StudyConfigurationModel

interface EventStart {
}  

concept When implements EventStart {
    startWhen: EventReference;
}

concept Day implements EventStart {
    startDay: number;
}

concept AnyDay implements EventStart {
}

expression StudyStart implements EventStart {
}

interface RepeatExpression {    
}

limited RepeatUnit {
    daily; weekly; monthly; forever;
}

limited TimeUnit {
   hours; days; weeks; months;
}

limited EventState {
    completed; started; scheduled; skipped;
}

concept RepeatCondition implements RepeatExpression {
    repeatUnit: RepeatUnit;
    maxRepeats: number;
    until: FirstScheduledExpression;
}

concept TimeAmount   {
    value: number;
    unit: TimeUnit = TimeUnit:days;
}

expression EventReference base TimeExpression {
    reference event: Event;
    eventState: EventState;
}

concept RepeatCount implements RepeatExpression {
    repeatCount: number;
}

concept Days {
    count: number;
}

concept EventWindow {
    daysBefore: Days;
    daysAfter: Days;
}

concept EventTimeOfDay {
    startHour: number;
    startMinute: number;
    endHour: number;
    endMinute: number;
}

concept EventSchedule {
    eventStart: EventStart;
    eventWindow: EventWindow;
    eventRepeat: RepeatExpression;
    eventTimeOfDay: EventTimeOfDay;
}
