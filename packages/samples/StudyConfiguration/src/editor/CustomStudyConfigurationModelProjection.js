"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CustomStudyConfigurationModelProjection = void 0;
// Generated by the Freon Language Generator.
var core_1 = require("@freon4dsl/core");
/**
 * Class CustomStudyConfigurationModelProjection provides an entry point for the language engineer to
 * define custom build additions to the editor.
 * These are merged with the custom build additions and other definition-based editor parts
 * in a three-way manner. For each modelelement,
 * (1) if a custom build creator/behavior is present, this is used,
 * (2) if a creator/behavior based on one of the editor definition is present, this is used,
 * (3) if neither (1) nor (2) yields a result, the default is used.
 */
var CustomStudyConfigurationModelProjection = /** @class */ (function () {
    function CustomStudyConfigurationModelProjection() {
        this.name = "Manual";
        // add your custom methods here
        this.nodeTypeToBoxMethod = new Map([
            ["Description", this.createDescription],
            ["Period", this.createPeriod],
            ["Event", this.createEvent],
        ]);
        this.nodeTypeToTableDefinition = new Map([
        // register your custom table definition methods here
        // ['NAME_OF_CONCEPT', this.TABLE_DEFINITION_FOR_CONCEPT],
        ]);
    }
    CustomStudyConfigurationModelProjection.prototype.getTableHeadersFor = function (projectionName) {
        return null;
    };
    ////////////////////////////////////////////////////////////////////
    CustomStudyConfigurationModelProjection.prototype.createDescription = function (desc) {
        return core_1.BoxFactory.horizontalLayout(desc, "Description-hlist-line-0", "", [
            new core_1.MultiLineTextBox(desc, "study-part-description", function () { return desc.text; }, function (t) { desc.text = t; })
        ], { selectable: false });
    };
    CustomStudyConfigurationModelProjection.prototype.createPeriod = function (period) {
        return core_1.BoxFactory.verticalLayout(period, "Period-overall", "", [
            core_1.BoxFactory.horizontalLayout(period, "Period-hlist-line-0", "", [
                core_1.BoxUtil.labelBox(period, "Period2:", "top-1-line-0-item-1"),
                core_1.BoxUtil.textBox(period, "name")
            ], { selectable: false }),
            core_1.BoxUtil.emptyLineBox(period, "Period-empty-line-1"),
            core_1.BoxUtil.labelBox(period, "EVENTS2", "top-1-line-2-item-0"),
            core_1.BoxUtil.indentBox(period, 4, "4", core_1.BoxUtil.verticalPartListBox(period, period.events, "events", null, this.handler)),
            core_1.BoxUtil.emptyLineBox(period, "Period-empty-line-5")
        ]);
    };
    CustomStudyConfigurationModelProjection.prototype.createEvent = function (event) {
        return core_1.BoxFactory.verticalLayout(event, "Event-overall", "", [
            core_1.BoxFactory.horizontalLayout(event, "Event-hlist-line-0", "", [
                core_1.BoxUtil.labelBox(event, "Event2:", "top-1-line-0-item-1"),
                core_1.BoxUtil.textBox(event, "name")
            ], { selectable: false }),
            core_1.BoxFactory.horizontalLayout(event, "Event-hlist-line-2", "", [
                core_1.BoxUtil.labelBox(event, "Description:", "top-1-line-2-item-0"),
                core_1.BoxUtil.getBoxOrAction(event, "description", "Description", this.handler)
            ], { selectable: false }),
            core_1.BoxUtil.labelBox(event, "Schedule:", "top-1-line-4-item-0"),
            core_1.BoxUtil.indentBox(event, 4, "5", core_1.BoxUtil.getBoxOrAction(event, "schedule", "EventSchedule", this.handler)),
            core_1.BoxFactory.horizontalLayout(event, "Event-hlist-line-9", "", [
                core_1.BoxUtil.labelBox(event, "Checklist:", "top-1-line-9-item-0"),
                core_1.BoxUtil.booleanBox(event, "showSequenced", { yes: "YES", no: "NO" }),
                core_1.BoxUtil.labelBox(event, "Allow Sequencing", "top-1-line-9-item-2")
            ], { selectable: false }),
            core_1.BoxUtil.indentBox(event, 4, "10", core_1.BoxUtil.getBoxOrAction(event, "checkList", "CheckList", this.handler)),
            core_1.BoxUtil.emptyLineBox(event, "Event-empty-line-11")
        ]);
    };
    return CustomStudyConfigurationModelProjection;
}());
exports.CustomStudyConfigurationModelProjection = CustomStudyConfigurationModelProjection;
